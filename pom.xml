<!--

- To build and test:

    mvn test

- To generate jar files:

    mvn package

- To generate documentation into the doc/ directory:

    mvn site

- To check which library depends on which other libraries:

    mvn dependency:tree

- To check if there are new library versions available go to http://search.maven.org or run this:

    mvn versions:display-dependency-updates
    
- To download source code of dependencies and create/update eclipse .project and .classpath files for dependencies:

    mvn eclipse:eclipse
    
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.flume</groupId>
  <artifactId>flume-ng-solr-sink</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <solr.version>4.0.0</solr.version>
    <avro.version>1.6.3</avro.version>
    <flume.version>1.2.0</flume.version>
    <tika.version>1.2</tika.version>
  </properties>
  
  <dependencies>
    <dependency> <!-- http://flume.apache.org -->
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-core</artifactId>
      <version>${flume.version}</version>
      <scope>provided</scope>
    </dependency>    
    <dependency> <!-- http://flume.apache.org -->
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-tests</artifactId>
      <version>${flume.version}</version>
      <scope>test</scope>
    </dependency>    
    <!--
    <dependency> 
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${solr.version}</version>
    </dependency>
    -->
    <!--
    <dependency> 
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>${tika.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-xmp</artifactId>
      <version>${tika.version}</version>      
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId> 
          <artifactId>commons-logging</artifactId> <!-- needed by pdfbox but solr-core replaces it with jcl-over-slf4j -->
        </exclusion>
      </exclusions>
    </dependency>
    <!--
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-app</artifactId>
      <version>${tika.version}</version>
    </dependency>
    -->
    <dependency> <!-- http://lucene.apache.org/solr -->
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-test-framework</artifactId>
      <version>${solr.version}</version>
      <scope>test</scope>
    </dependency>    
    <dependency> <!-- see http://lucene.apache.org/solr -->
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${solr.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId> <!-- instead use slf4j on top of log4j or logback  -->
        </exclusion>
      </exclusions>      
    </dependency>
    <dependency> <!-- see http://lucene.apache.org/solr -->
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-cell</artifactId>
      <version>${solr.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId> <!-- used by ExtractingDocumentLoader but we never call it -->
        </exclusion>
        <exclusion>
          <groupId>com.ibm.icu</groupId>
          <artifactId>icu4j</artifactId> <!-- nothing in solr-cell is using this -->
        </exclusion>
      </exclusions>            
    </dependency>
    <dependency> <!-- see http://wiki.fasterxml.com/JacksonHome -->
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.0.6</version>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- see http://opencsv.sourceforge.net -->
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency> <!-- see https://github.com/cowtowncoder/java-uuid-generator -->
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <version>3.1.3</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId> <!-- not actually required -->
        </exclusion>
      </exclusions>      
    </dependency>
    <!--
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    -->
  </dependencies>

  <build>
    <plugins>
       <!--
       <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>
      </plugin>
      -->
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <encoding>UTF-8</encoding>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      
      <!--  Let's shade dependencies to simplify deployment and avoid version conflicts. 
            See http://maven.apache.org/plugins/maven-shade-plugin/index.html 
            and http://maven.apache.org/plugins/maven-shade-plugin/shade-mojo.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.7.1</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>  
              <excludes>
                <exclude>org/slf4j/**</exclude>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <excludes>
                  <exclude>org.slf4j:slf4j-api</exclude>            <!-- already provided by flume -->
                  <exclude>org.apache.flume:flume-ng-core</exclude> <!-- already provided by flume -->
                </excludes>
              </artifactSet>
              
              <!-- this would cause java.lang.ClassFormatError: Bad string initial value in class file org/apache/flume/sink/solr/TikaSolrSink
              <relocations>
                <relocation>
                  <shadedPattern>org.shaded.sink.solr.</shadedPattern>
                  <excludes>
                    <exclude>org.apache.tika.**</exclude>
                    <exclude>org.apache.solr.**</exclude>
                    <exclude>org.apache.flume.**</exclude>
                  </excludes>
                </relocation>
              </relocations>
              -->

              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>                  
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <outputDirectory>${project.build.directory}/lib</outputDirectory>
          <includeScope>runtime</includeScope>
        </configuration>
        
        <!--
        <executions>
          <execution>
            <phase>package</phase>
            <goals> <goal>copy-dependencies</goal> </goals>
          </execution>
        </executions>
        -->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>
    </plugins>
  </build> 
</project>
